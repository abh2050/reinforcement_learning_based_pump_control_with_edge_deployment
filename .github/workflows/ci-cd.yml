name: AI Pump Control System CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create synthetic data
      run: |
        python test_ci.py
    
    - name: Run comprehensive tests
      run: |
        python test_ci.py
    
    - name: Generate test report
      run: |
        echo '# Test Results' > test_report.md
        echo '## Test Matrix' >> test_report.md
        echo "- Python Version: ${{ matrix.python-version }}" >> test_report.md
        echo "- OS: ubuntu-latest" >> test_report.md
        echo "- Status: âœ… All tests passed" >> test_report.md
        echo "- Timestamp: $(date)" >> test_report.md
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          test_report.md
          Synthetic_Pump_System_Data.csv

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build deployment package
      run: |
        mkdir -p deployment
        cp *.py deployment/
        cp requirements.txt deployment/
        cp README.md deployment/
        cp PROJECT_SUMMARY.md deployment/
        
        # Create deployment script
        cat > deployment/deploy.sh << 'EOF'
        #!/bin/bash
        echo "ðŸš€ Deploying AI Pump Control System..."
        
        # Install dependencies
        pip install -r requirements.txt
        
        # Generate synthetic data if not exists
        if [ ! -f "Synthetic_Pump_System_Data.csv" ]; then
            python -c "
        import pandas as pd
        import numpy as np
        from datetime import datetime, timedelta
        
        np.random.seed(42)
        n_samples = 1000
        
        data = {
            'timestamp': [datetime.now() + timedelta(minutes=i) for i in range(n_samples)],
            'pump_speed_rpm': np.random.uniform(1500, 2200, n_samples),
            'valve_position': np.random.uniform(0.4, 1.0, n_samples),
            'flow_rate_lpm': np.random.uniform(100, 300, n_samples),
            'pressure_psi': np.random.uniform(1, 8, n_samples),
            'reward': np.random.uniform(-10, -1, n_samples)
        }
        
        df = pd.DataFrame(data)
        df.to_csv('Synthetic_Pump_System_Data.csv', index=False)
            "
        fi
        
        # Run system tests
        python test_system.py
        
        # Start the system
        echo "âœ… System ready for deployment!"
        echo "Run 'python edge_deployment.py' to start the API server"
        EOF
        
        chmod +x deployment/deploy.sh
        
    - name: Create deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: deployment/
        
    - name: Generate deployment documentation
      run: |
        echo "# Deployment Package" > DEPLOYMENT.md
        echo "" >> DEPLOYMENT.md
        echo "## Quick Start" >> DEPLOYMENT.md
        echo "1. Download the deployment package" >> DEPLOYMENT.md
        echo "2. Extract to your target environment" >> DEPLOYMENT.md
        echo "3. Run: \`chmod +x deploy.sh && ./deploy.sh\`" >> DEPLOYMENT.md
        echo "4. Start the system: \`python edge_deployment.py\`" >> DEPLOYMENT.md
        echo "" >> DEPLOYMENT.md
        echo "## System Requirements" >> DEPLOYMENT.md
        echo "- Python 3.8+" >> DEPLOYMENT.md
        echo "- 2GB RAM minimum" >> DEPLOYMENT.md
        echo "- 1GB storage space" >> DEPLOYMENT.md
        echo "- Network access for MQTT (optional)" >> DEPLOYMENT.md
        echo "" >> DEPLOYMENT.md
        echo "## Supported Platforms" >> DEPLOYMENT.md
        echo "- Raspberry Pi 4" >> DEPLOYMENT.md
        echo "- NVIDIA Jetson Nano" >> DEPLOYMENT.md
        echo "- Industrial PCs" >> DEPLOYMENT.md
        echo "- Docker containers" >> DEPLOYMENT.md
        echo "- Cloud instances" >> DEPLOYMENT.md
